{"version":3,"sources":["app.js","services.js","config.js","directives.js","filters.js","controllers.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdrzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"nQueue.js","sourcesContent":["/*\r\n    Main File AngularJS\r\n */\r\n(function(){\r\n    'use strict';\r\n    angular.\r\n            module('nQueue', [\r\n            'ui.router',\r\n            'oc.lazyLoad',\r\n            'satellizer',\r\n            'ui.bootstrap',\r\n            'btford.socket-io',\r\n            'angularMoment'\r\n        ]);\r\n})();","/**\n * Services\n */\n\nangular\n    .module('nQueue')\n    .factory('socket', socket)\n    .factory('Login', Login)\n    .factory('QueueModel', QueueModel)\n    .factory('QueueApi', QueueApi)\n    .factory('UsersApi', UsersApi)\n    .factory('Setting', Setting)\n    .factory('SessionService', SessionService);\n\n    /**\n     * Socket\n     * @param socketFactory\n     * @returns {*}\n     */\n    function socket(socketFactory, SOCKET){\n        var mySocket = socketFactory({\n            ioSocket: io.connect('//'+SOCKET+':3000')\n        });\n        return mySocket;\n    }\n\n    function Login($http){\n        return {\n            auth: function(login){\n                return $http({\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    url: '/api/authenticate',\n                    method: 'POST',\n                    data: {\n                        username: login.username,\n                        password: login.password\n                    }\n                });\n            }\n        }\n    }\n\n    /**\n     * Listar para Totem\n     * @param $http\n     * @returns {{get: get}}\n     */\n    function QueueModel($http){\n        return {\n            listToQueue: function(){\n                return $http.get('/list-to-queue');\n            },\n            addInQueue: function($queue){\n                return $http.post('/add-in-queue', {queue: $queue});\n            }\n        };\n    }\n\n    function QueueApi($http) {\n        return {\n            inQueue: function () {\n                return $http.get('/api/queue');\n            },\n            call: function ($data) {\n                return $http.post('/api/queue/call', $data);\n            },\n            again: function ($data) {\n                return $http.post('/api/queue/again', $data);\n            },\n            status: function ($id, $status) {\n                return $http.put('/api/queue/status/' + $id, $status);\n            }\n        }\n    }\n\n    function UsersApi($http){\n        return {\n            paginate: function($last){\n                return $http({\n                    url: '/api/users/paginate',\n                    method: \"GET\",\n                    params: { page: $last }\n                })\n            },\n            store: function(data){\n                return $http.post('/api/users/create', data);\n            },\n            edit: function(id){\n                return $http.get('/api/users/' + id + '/edit');\n            }\n        }\n    }\n\n    function Setting($http){\n        var base = '/api/setting/';\n        return {\n            get: function($url){\n                return $http.get(base + $url);\n            }\n        }\n\n    }\n\n    function SessionService(){\n        return {\n            get: function(key){\n                return sessionStorage.getItem(key);\n            },\n            set: function(key, value){\n                return sessionStorage.setItem(key, value);\n            },\n            unset: function(key){\n                return sessionStorage.removeItem(key);\n            }\n        }\n    }","/**\n * Configs and Routers\n * @param $stateProvider\n * @param $urlRouterProvider\n * @param $ocLazyLoadProvider\n */\nfunction config($ocLazyLoadProvider, $stateProvider, $urlRouterProvider, $authProvider, $httpProvider, $provide){\n\n    function redirectWhenLoggedOut($q, $injector) {\n\n        return {\n\n            responseError: function(rejection) {\n\n                // Need to use $injector.get to bring in $state or else we get\n                // a circular dependency error\n                var $state = $injector.get('$state');\n\n                // Instead of checking for a status code of 400 which might be used\n                // for other reasons in Laravel, we check for the specific rejection\n                // reasons to tell us if we need to redirect to the login state\n                var rejectionReasons = ['token_not_provided', 'token_expired', 'token_absent', 'token_invalid'];\n\n                // Loop through each rejection reason and redirect to the login\n                // state if one is encountered\n                angular.forEach(rejectionReasons, function(value, key) {\n\n                    if(rejection.data.error === value) {\n\n                        // If we get a rejection corresponding to one of the reasons\n                        // in our array, we know we need to authenticate the user so\n                        // we can remove the current user from local storage\n                        localStorage.removeItem('user');\n\n                        // Send the user to the auth state so they can login\n                        $state.go('auth');\n                    }\n                });\n\n                return $q.reject(rejection);\n            }\n        }\n    }\n\n    // Setup for the $httpInterceptor\n    $provide.factory('redirectWhenLoggedOut', redirectWhenLoggedOut);\n\n    // Push the new factory onto the $http interceptor array\n    $httpProvider.interceptors.push('redirectWhenLoggedOut');\n\n    $authProvider.loginUrl = '/api/authenticate';\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $ocLazyLoadProvider.config({\n        debug: true\n    });\n\n    $stateProvider\n        // Solicitar a Senha\n        .state('home', {\n            url: '/',\n            templateUrl: 'partials/home/index.html',\n            data: {\n                specialClass: 'nqueueBg',\n                pageTitle: 'Retire sua senha - Cartório Ayache'\n            }\n        })\n        // Logar no Sistema\n        .state('auth', {\n            url: '/login',\n            templateUrl: 'partials/auth/login.html',\n            controller: 'AuthCtrl as vm',\n            data: { pageTitle: 'Login', specialClass: 'gray-bg'}\n        })\n        // Administrator\n\n        .state('admin', {\n            abstract: true,\n            url: '/admin',\n            templateUrl: 'partials/common/content.html',\n            data: { requireLogin: true }\n        })\n\n        .state('admin.queue', {\n            url: '/queue',\n            templateUrl: 'partials/admin/queue/index.html',\n            data: { pageTitle: 'Controle de Senhas', requireLogin: true }\n        })\n\n        .state('admin.users', {\n            url: '/users',\n            templateUrl: 'partials/admin/users/index.html',\n            data: { pageTitle: 'Usuários', requireLogin: true }\n        })\n\n        .state('admin.users-create', {\n            url: '/users/create',\n            templateUrl: 'partials/admin/users/create.html',\n            controller: \"UsersNewCtrl as vm\",\n            data: { pageTitle: 'Adicione um novo usuário', requireLogin: true }\n        })\n\n        .state('admin.users-edit', {\n            url: '/users/{id}/edit',\n            templateUrl: 'partials/admin/users/edit.html',\n            controller: \"UsersEditCtrl as vm\",\n            data: { pageTitle: 'Editar Usuário', requireLogin: true }\n        })\n}\n\n\nangular\n    .module('nQueue')\n    .config(config)\n    .run(function($rootScope, $state, $timeout, amMoment){\n\n        $rootScope.$state = $state;\n\n        $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Grab the user from local storage and parse it to an object\n            var user = JSON.parse(localStorage.getItem('user'));\n\n            // If there is any user data in local storage then the user is quite\n            // likely authenticated. If their token is expired, or if they are\n            // otherwise not actually authenticated, they will be redirected to\n            // the auth state because of the rejected request anyway\n            if(user) {\n\n                // The user's authenticated state gets flipped to\n                // true so we can now show parts of the UI that rely\n                // on the user being logged in\n                $rootScope.authenticated = true;\n\n                // Putting the user's data on $rootScope allows\n                // us to access it anywhere across the app. Here\n                // we are grabbing what is in local storage\n                $rootScope.currentUser = user;\n\n                // If the user is logged in and we hit the auth route we don't need\n                // to stay there and can send the user to the main state\n                if(toState.name === \"auth\") {\n\n                    // Preventing the default behavior allows us to use $state.go\n                    // to change states\n                    event.preventDefault();\n                    // go to the \"main\" state which in our case is users\n                    $state.go('admin.queue');\n                }\n            }\n\n            var requireLogin = toState.data.requireLogin;\n            $timeout(function(){\n                if(requireLogin && !$rootScope.authenticated){\n                    $state.go('auth');\n                }\n            }, 0);\n\n            // Check your Access\n            var access = toState.data.access;\n            if(access && ($rootScope.currentUser.access < access)){\n                // Redirect to Dashboard\n                $state.go('admin.queue');\n                event.preventDefault();\n            }\n        });\n\n        // MomentJS locale text in Portugues.\n        amMoment.changeLocale('pt-br');\n    });\n\n","/**\r\n * Titulo da Pagina usar no public/app/config.js\r\n * @use data: { pageTitle: \"Name Page\" }\r\n * @param $rootScope\r\n * @param $timeout\r\n * @returns {{link: link}}\r\n */\r\nfunction pageTitle($rootScope, $timeout) {\r\n    return {\r\n        link: function(scope, element) {\r\n            var listener = function(event, toState, toParams, fromState, fromParams) {\r\n                // Default title - load on Dashboard 1\r\n                var title = 'nQueue | Gerenciador de Filas';\r\n                // Create your own title pattern\r\n                if (toState.data && toState.data.pageTitle) title = 'nQueue | ' + toState.data.pageTitle;\r\n                $timeout(function() {\r\n                    element.text(title);\r\n                });\r\n            };\r\n            $rootScope.$on('$stateChangeStart', listener);\r\n        }\r\n    }\r\n};\r\n\r\nfunction currentTime($timeout, dateFilter) {\r\n    // return the directive link function. (compile function not needed)\r\n    return function(scope, element, attrs) {\r\n        var format,  // date format\r\n            timeoutId; // timeoutId, so that we can cancel the time updates\r\n\r\n        // used to update the UI\r\n        function updateTime() {\r\n            element.text(dateFilter(new Date(), format));\r\n        }\r\n\r\n        // watch the expression, and update the UI on change.\r\n        scope.$watch(attrs.currentTime, function(value) {\r\n            format = value;\r\n            updateTime();\r\n        });\r\n\r\n        // schedule update in one second\r\n        function updateLater() {\r\n            // save the timeoutId for canceling\r\n            timeoutId = $timeout(function() {\r\n                updateTime(); // update DOM\r\n                updateLater(); // schedule another update\r\n            }, 1000);\r\n        }\r\n\r\n        // listen on DOM destroy (removal) event, and cancel the next UI update\r\n        // to prevent updating time ofter the DOM element was removed.\r\n        element.bind('$destroy', function() {\r\n            $timeout.cancel(timeoutId);\r\n        });\r\n\r\n        updateLater(); // kick off the UI update process.\r\n    }\r\n}\r\n/**\r\n * Horas do Auto Atendimento HH:mm:ii\r\n * @param $timeout\r\n * @returns {{restrict: string, template: string, controller: controller}}\r\n */\r\nfunction ngClock($timeout){\r\n    return {\r\n        restrict: 'E',\r\n        template:'<span class=\"time\">'\r\n        + '<span class=\"hours\">'\r\n        + '{{date.getHours() | pad}}'\r\n        + '</span>:<span class=\"minutes\">'\r\n        + '{{date.getMinutes() | pad}}'\r\n        + '</span>:<span class=\"seconds\">'\r\n        + '{{date.getSeconds() | pad}}'\r\n        + '</span>'\r\n        + '</span>',\r\n        controller: function($scope, $element) {\r\n            $scope.date = new Date();\r\n            var tick = function() {\r\n                $scope.date = new Date();\r\n                $timeout(tick, 1000);\r\n            };\r\n            $timeout(tick, 1000);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Mask para CPF e CNPJ\r\n * @returns {{require: string, restrict: string, link: link}}\r\n */\r\nfunction maskCpfCnpj(){\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: \"A\",\r\n        link: function(scope, element, attrs){\r\n            scope.$watch(attrs.ngModel, function (v) {\r\n                var cpfcnpj = v;\r\n                if(cpfcnpj != undefined) {\r\n                    var cMask = v.replace(/\\D/g, '').length <= 11 ? '000.000.000-00' : '00.000.000/0000-00';\r\n                    element.mask(cMask);\r\n                }\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Uppercase Directive\r\n * @returns {{require: string, link: link}}\r\n */\r\nfunction capitalize(){\r\n    return {\r\n        require: 'ngModel',\r\n        link: function(scope, element, attrs, modelCtrl) {\r\n            modelCtrl.$parsers.push(function(input) {\r\n                return input ? input.toUpperCase() : \"\";\r\n            });\r\n            element.css(\"text-transform\",\"uppercase\");\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Style to Radio and Checkbox\r\n * @param $timeout\r\n * @returns {{restrict: string, require: string, link: link}}\r\n */\r\nfunction icheck($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function($scope, element, $attrs, ngModel) {\r\n            return $timeout(function() {\r\n                var value;\r\n                value = $attrs['value'];\r\n\r\n                $scope.$watch($attrs['ngModel'], function(newValue){\r\n                    $(element).iCheck('update');\r\n                })\r\n\r\n                return $(element).iCheck({\r\n                    checkboxClass: 'icheckbox_square-green',\r\n                    radioClass: 'iradio_square-green'\r\n\r\n                }).on('ifChanged', function(event) {\r\n                    if ($(element).attr('type') === 'checkbox' && $attrs['ngModel']) {\r\n                        $scope.$apply(function() {\r\n                            return ngModel.$setViewValue(event.target.checked);\r\n                        });\r\n                    }\r\n                    if ($(element).attr('type') === 'radio' && $attrs['ngModel']) {\r\n                        return $scope.$apply(function() {\r\n                            return ngModel.$setViewValue(value);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction minimalizaSidebar($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        template: '<a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"\" ng-click=\"minimalize()\"><i class=\"fa fa-bars\"></i></a>',\r\n        controller: function ($scope, $element) {\r\n            $scope.minimalize = function () {\r\n                $(\"body\").toggleClass(\"mini-navbar\");\r\n                if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\r\n                    // Hide menu in order to smoothly turn on when maximize menu\r\n                    $('#side-menu').hide();\r\n                    // For smoothly turn on menu\r\n                    setTimeout(\r\n                        function () {\r\n                            $('#side-menu').fadeIn(400);\r\n                        }, 200);\r\n                } else if ($('body').hasClass('fixed-sidebar')){\r\n                    $('#side-menu').hide();\r\n                    setTimeout(\r\n                        function () {\r\n                            $('#side-menu').fadeIn(400);\r\n                        }, 100);\r\n                } else {\r\n                    // Remove all inline style from jquery fadeIn function to reset menu state\r\n                    $('#side-menu').removeAttr('style');\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction sideNavigation($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element) {\r\n            // Call the metsiMenu plugin and plug it to sidebar navigation\r\n            $timeout(function(){\r\n                element.metisMenu();\r\n\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction fullScroll($timeout){\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element) {\r\n            $timeout(function(){\r\n                element.slimscroll({\r\n                    height: '100%',\r\n                    railOpacity: 0.9\r\n                });\r\n\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction slimScroll($timeout){\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            boxHeight: '@'\r\n        },\r\n        link: function(scope, element) {\r\n            $timeout(function(){\r\n                element.slimscroll({\r\n                    height: scope.boxHeight,\r\n                    railOpacity: 0.9\r\n                });\r\n\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('nQueue')\r\n    .directive('pageTitle', pageTitle)\r\n    .directive('currentTime', currentTime)\r\n    .directive('ngClock', ngClock)\r\n    .directive('maskCpfCnpj', maskCpfCnpj)\r\n    .directive('capitalize', capitalize)\r\n    .directive('icheck', icheck)\r\n    .directive('minimalizaSidebar', minimalizaSidebar)\r\n    .directive('sideNavigation', sideNavigation)\r\n    .directive('fullScroll', fullScroll)\r\n    .directive('slimScroll', slimScroll);","function pad() {\n    return function(num) {\n        return (num < 10 ? '0' + num : num); // coloca o zero na frente\n    };\n}\n/**\n * Mask to CPF/CNPJ in {{ documento | CPF }}\n * @returns {Function}\n */\nfunction cpfcnpj(){\n    return function(input) {\n        if(input != undefined)\n        {\n            if(input.length <= 11){\n                var str = input+ '';\n                str = str.replace(/\\D/g,'');\n                str = str.replace(/(\\d{3})(\\d)/,\"$1.$2\");\n                str = str.replace(/(\\d{3})(\\d)/,\"$1.$2\");\n                str = str.replace(/(\\d{3})(\\d{1,2})$/,\"$1-$2\");\n                return str;\n            }else{\n                var str = input+ '';\n                str = str.replace(/\\D/g,'');\n                str = str.replace(/(\\d{2})(\\d)/,\"$1.$2\");\n                str = str.replace(/(\\d{3})(\\d)/,\"$1.$2\");\n                str = str.replace(/(\\d{3})(\\d)/,\"$1/$2\");\n                str = str.replace(/(\\d{4})(\\d{1,2})$/,\"$1-$2\");\n                return str;\n            }\n        }\n    };\n}\n\nfunction attend(){\n    return function(input){\n        if(input != undefined){\n            if(input==1){\n                return \"Normal\";\n            }else if(input==3){\n                return \"Preferencial\";\n            }else if(input==2){\n                return \"Mensalista\"\n            }\n        }\n    }\n}\n\nangular\n    .module('nQueue')\n    .filter('pad', pad)\n    .filter('cpfcnpj', cpfcnpj)\n    .filter('attend', attend);","/**\n * Controllers AngularJS\n */\nfunction MainCtrl($scope){\n\n}\n\n/**\n * Authenticate Controller\n * @param $auth\n * @param $state\n * @param $http\n * @param $rootScope\n * @constructor\n */\nfunction AuthCtrl($auth, $state, $http, $scope, $rootScope){\n\n    var vm = this;\n\n    $scope.loginError   = false;\n    $scope.loginErrorText = \"\";\n\n    vm.login = function(login){\n        var credentials = {\n            username: login.username,\n            password: login.password\n        };\n        $auth.login(credentials).then(function(){\n                return $http.get('/api/authenticate/user')\n            }, function(response){\n            $scope.loginError = true;\n                if(response.status===422){\n                    $scope.isErrorType = 1;\n                    $scope.loginErrorText = response.data.username[0];\n                }else if(response.status == 401 && (response.data.error = \"invalid_credentials\")){\n                    $scope.isErrorType = 2;\n                    $scope.loginErrorText = \"Sua senha está incorreta\";\n                }\n\n            })\n            .then(function(response){\n                // Stringify the returned data to prepare it\n                // to go into local storage\n                var user = JSON.stringify(response.data.user);\n\n                // Set the stringified user data into local storage\n                localStorage.setItem('user', user);\n\n                // The user's authenticated state gets flipped to\n                // true so we can now show parts of the UI that rely\n                // on the user being logged in\n                $rootScope.authenticated = true;\n\n                // Putting the user's data on $rootScope allows\n                // us to access it anywhere across the app\n                $rootScope.currentUser = response.data.user;\n\n                // Everything worked out so we can now redirect to\n                // the users state to view the data\n                $state.go('admin.queue');\n            })\n    }\n\n}\n\n/**\n * Profile User\n * @param $http\n * @param $auth\n * @param $rootScope\n * @constructor\n */\nfunction ProfileCtrl($http, $auth, $rootScope, $state){\n\n    var vm = this;\n\n    vm.logout = function() {\n        $auth.logout().then(function() {\n            // Remove the authenticated user from local storage\n            localStorage.removeItem('user');\n            // Flip authenticated to false so that we no longer\n            // show UI elements dependant on the user being logged in\n            $rootScope.authenticated = false;\n            // Remove the current user info from rootscope\n            $rootScope.currentUser = null;\n\n            $state.go('auth', {})\n        });\n    }\n}\n\n/**\n *\n * @param $scope\n * @param QueueModel\n * @param socket\n * @constructor\n */\nfunction HomeCtrl($scope, QueueModel, socket){\n    /**\n     * VM / SELF\n     */\n    var vm      = this,\n        self    = $scope;\n    /**\n     * Desabilitar botão\n     * @type {boolean}\n     * @private\n     */\n    self._waitPrinter = false;\n    /**\n     * Lista de Atendimentos\n     * @type {Array}\n     */\n    $scope.list = [];\n    /**\n     * Carregar Atendimentos pelo Factory\n     */\n    QueueModel\n        .listToQueue()\n        .success(function(data){\n            $scope.list = data;\n        });\n    /**\n     * Requisitar uma Senha.\n     * @param $queue\n     */\n    vm.getQueue = function($queue){\n        self._waitPrinter = true;\n        QueueModel.\n            addInQueue($queue)\n            .success(function(data){\n                socket.emit(\"add:Queue\", data);\n                self._waitPrinter = false;\n        });\n    };\n    /**\n     * Get Date Totem\n     * @returns {string}\n     */\n    vm.dateDay = function(){\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth()+1; //January is 0!\n\n        var yyyy = today.getFullYear();\n        if(dd<10){\n            dd='0'+dd\n        }\n        if(mm<10){\n            mm='0'+mm\n        }\n        var today = dd+'/'+mm+'/'+yyyy;\n        return today;\n    };\n    /**\n     * Reload Page\n     */\n    vm.refresh = function(){\n        location.reload();\n    };\n}\n\n/**\n * Queue Manager\n * @param $scope\n * @param $rootScope\n * @param QueueApi\n * @param socket\n * @constructor\n */\nfunction QueueCtrl($scope, $rootScope, QueueApi, socket){\n    var self    = $scope,\n        vm      = this;\n\n    /**\n     * Step for Change\n     * @type {number}\n     * @private\n     */\n    self._step = 1;\n\n    /**\n     * Fila de Atendimento\n     */\n    self._inQueue = [];\n\n    /**\n     * Adicionar a fila de todos\n     * Via socket.io\n     */\n    socket.on(\"in:Queue\", function(data){\n        console.log(data);\n        self._inQueue.push(data);\n    });\n\n    /**\n     * Carregando Contado nos Botoes\n     */\n    self.$watchCollection('_inQueue', function(){\n        self._normal = 0;\n        self._preferencial = 0;\n        self._mensalista = 0;\n        angular.forEach(self._inQueue, function(value, key){\n            if(value.queue_id==1){\n                self._normal+=1;\n            }else if(value.queue_id==3){\n                self._preferencial+=1;\n            }else if(value.queue_id==2){\n                self._mensalista+=1;\n            }\n        })\n    });\n\n    /**\n     * Carregando os Atendimentos do Banco de Dados\n     * @private\n     */\n    self._loadQueue = function(){\n        QueueApi\n            .inQueue()\n            .success(function(data){\n                console.log(data);\n                self._inQueue = data;\n            })\n    };\n\n    /**\n     * Inicializar\n     */\n    self._loadQueue();\n\n    \n    /**\n     * Area to Calling Queue in TV\n     */\n    self._inCallingWait = null;\n\n    // Chamar Nova Senha;\n    vm.callQueue = function(atendimento){\n\n        self._step = 2;\n        \n        // Pegando Usuário Logado\n        var _user = $rootScope.currentUser.id;\n\n        // Localizando Proximo na Fila\n        var _update = vm.findAttend(self._inQueue, atendimento);\n        console.log(_update);\n\n        // Pegando Index\n        var _index = self._inQueue.indexOf(_update);\n        \n        // Enviar Para TV\n        QueueApi\n            .call({ id: _update.id, user_id: _user })\n            .success(function(data){\n                self._inCallingWait = data.id;\n                socket.emit(\"call:Queue\", data);\n                socket.emit(\"remove:Queue\", { index: _index, data: data });\n                ws.send(JSON.stringify(data));\n                self._inQueue.splice(_index, 1);\n            });\n    };\n\n    /**\n     * Status do Atendimento\n     */\n\n    self._saveCalling;\n\n    self.showButtonsCancel = false;\n    /**\n     * Chamar Novamente\n     * @param id\n     */\n    vm.novamente = function(id){\n        QueueApi\n            .again({id: id})\n            .success(function(data){\n                ws.send(JSON.stringify(data));\n                socket.emit(\"call:Queue\", data);\n            });\n    };\n\n    /**\n     * Em Atendimento\n     * @param id\n     */\n    vm.atendimento = function(id){\n        self._step = 3;\n        QueueApi\n            .status(id, {status_id: 3})\n            .success(function(data){\n                console.log(\"Atendimento: \");\n            });\n    };\n\n    /**\n     * Atendimento Finalizado\n     * @param id\n     */\n    vm.finalizado = function(id){\n        self._step = 1;\n        QueueApi\n            .status(id, {status_id: 4})\n            .success(function(data){\n                console.log(\"Finalizado: \");\n            });\n    }\n    /**\n     * Desistiu do Atendimento\n     * @param id\n     */\n    vm.desistiu = function(id){\n        self._step = 1;\n        QueueApi\n            .status(id, {status_id: 5})\n            .success(function(data){\n                console.log(\"Desistiu: \");\n            });\n\n    };\n    /**\n     * Nao Compareceu ao Guichê\n     */\n    vm.naocompareceu = function(id){\n        self._step = 1;\n        QueueApi\n            .status(id, {status_id: 6})\n            .success(function(data){\n                console.log(\"Não Compareceu: \");\n            });\n\n    }\n\n    /**\n     * Removendo da Fila da Atendimento\n     * @param _inQueue\n     * @param atendimento\n     * @returns {*}\n     */\n    vm.findAttend = function(_inQueue, atendimento){\n        for(var i=0; i < _inQueue.length; i++){\n            if(_inQueue[i].queue_id == atendimento){\n                return _inQueue[i]\n            }\n        }\n    };\n\n}\n\n\nfunction UsersCtrl($scope, $rootScope, UsersApi){\n    var vm = this,\n        self = $scope;\n    \n    self.users = [];\n\n    self.lastpage = 1;\n    /**\n     * Function Init Users\n     */\n    vm.initUsers = function ()\n    {\n        UsersApi\n            .paginate(self.lastpage)\n            .success(function(response){\n                self.nextPage = (response.next_page_url) ? true : false;\n                self.users = response.data;\n                self.currentPage = response.current_page;\n            });\n    };\n    /**\n     * Start Init Users\n     */\n    vm.initUsers();\n\n    vm.loadMore = function()\n    {\n        self.lastpage +=1;\n        UsersApi\n            .paginate(self.lastpage)\n            .success(function(response){\n                self.nextPage = (response.next_page_url) ? true : false;\n                self.users = self.users.concat(response.data);\n            })\n    }\n}\n\nfunction UsersNewCtrl($scope, $state, UsersApi, Setting){\n\n    var vm = this,\n        self = $scope;\n\n    self.items = [];\n\n    self.form = {};\n\n    self.initAccess = function(){\n        Setting\n            .get('access')\n            .success(function(response){\n                self.items = response;\n                self.form.access = self.items[0].id;\n            })\n    };\n    /**\n     * loadAccess\n     */\n    self.initAccess();\n\n    /**\n     * Criar Usuário\n     * @param form\n     */\n    vm.create = function(form){\n        UsersApi\n            .store(form)\n            .success(function(data){\n                if(data)\n                    $state.go('admin.users')\n            });\n    }\n\n}\n\nfunction UsersEditCtrl($scope, $rootScope, $stateParams, UsersApi){\n    var vm = this,\n        self = $scope;\n\n    self._id = $stateParams.id;\n\n    self.form = {};\n\n    UsersApi\n        .edit(self._id)\n        .success(function(response){\n            self.form = response;\n        });\n\n\n    vm.edit = function(form){\n        console.log(form);\n    };\n\n    vm.changePassword = function(password){\n        console.log(password);\n    };\n\n    vm.verifyPassword = function (form) {\n        if((form.password == null) || (form.password != form.cpassword)){\n            return true\n        }else {\n            return false;\n        }\n    }\n\n\n\n\n}\n\nangular\n    .module('nQueue')\n    .controller('MainCtrl', MainCtrl)\n    .controller('AuthCtrl', AuthCtrl)\n    .controller('ProfileCtrl', ProfileCtrl)\n    .controller('HomeCtrl', HomeCtrl)\n    .controller('QueueCtrl', QueueCtrl)\n    .controller('UsersCtrl', UsersCtrl)\n    .controller('UsersNewCtrl', UsersNewCtrl)\n    .controller('UsersEditCtrl', UsersEditCtrl);"],"sourceRoot":"/source/"}