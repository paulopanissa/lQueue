{"version":3,"sources":["app.js","services.js","config.js","directives.js","filters.js","controllers.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"nQueue.js","sourcesContent":["/*\r\n    Main File AngularJS\r\n */\r\n(function(){\r\n    'use strict';\r\n    angular.\r\n            module('nQueue', [\r\n            'ui.router',\r\n            'oc.lazyLoad',\r\n            'satellizer',\r\n            'ui.bootstrap',\r\n            'btford.socket-io',\r\n            'angularMoment'\r\n        ]);\r\n})();","/**\r\n * Services\r\n */\r\n\r\nangular\r\n    .module('nQueue');\r\n    .factory('listToQueue', listToQueue)\r\n\r\n\r\n\r\n    function listToQueue($http){\r\n        var base = '/list-to-queue'\r\n        return {\r\n            get: function(){\r\n                return $http.get(base);\r\n            }\r\n        }\r\n    }","function config($stateProvider, $urlRouterProvider, $ocLazyLoadProvider, $authProvider, $httpProvider, $provide){\r\n\r\n    $urlRouterProvider.otherwise(\"/\");\r\n\r\n    $ocLazyLoadProvider.config({\r\n        debug: true\r\n    });\r\n\r\n    $stateProvider\r\n        .state('home', {\r\n            url: '/',\r\n            templateUrl: 'partials/home/index.html',\r\n            data: {\r\n                specialClass: 'nqueueBg',\r\n                pageTitle: 'Retire sua senha - Cart√≥rio Ayache'\r\n            }\r\n        });\r\n\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module(config)\r\n    .run(function($rootScope, $state, $timeout, amMoment){\r\n        $rootScope.$state = $state;\r\n\r\n        // MomentJS locale text in Portugues.\r\n        amMoment.changeLocale('pt-br');\r\n    });","/**\r\n * Titulo da Pagina usar no public/app/config.js\r\n * @use data: { pageTitle: \"Name Page\" }\r\n * @param $rootScope\r\n * @param $timeout\r\n * @returns {{link: link}}\r\n */\r\nfunction pageTitle($rootScope, $timeout) {\r\n    return {\r\n        link: function(scope, element) {\r\n            var listener = function(event, toState, toParams, fromState, fromParams) {\r\n                // Default title - load on Dashboard 1\r\n                var title = 'nQueue | Gerenciador de Filas';\r\n                // Create your own title pattern\r\n                if (toState.data && toState.data.pageTitle) title = 'nQueue | ' + toState.data.pageTitle;\r\n                $timeout(function() {\r\n                    element.text(title);\r\n                });\r\n            };\r\n            $rootScope.$on('$stateChangeStart', listener);\r\n        }\r\n    }\r\n};\r\n\r\nfunction currentTime($timeout, dateFilter) {\r\n    // return the directive link function. (compile function not needed)\r\n    return function(scope, element, attrs) {\r\n        var format,  // date format\r\n            timeoutId; // timeoutId, so that we can cancel the time updates\r\n\r\n        // used to update the UI\r\n        function updateTime() {\r\n            element.text(dateFilter(new Date(), format));\r\n        }\r\n\r\n        // watch the expression, and update the UI on change.\r\n        scope.$watch(attrs.currentTime, function(value) {\r\n            format = value;\r\n            updateTime();\r\n        });\r\n\r\n        // schedule update in one second\r\n        function updateLater() {\r\n            // save the timeoutId for canceling\r\n            timeoutId = $timeout(function() {\r\n                updateTime(); // update DOM\r\n                updateLater(); // schedule another update\r\n            }, 1000);\r\n        }\r\n\r\n        // listen on DOM destroy (removal) event, and cancel the next UI update\r\n        // to prevent updating time ofter the DOM element was removed.\r\n        element.bind('$destroy', function() {\r\n            $timeout.cancel(timeoutId);\r\n        });\r\n\r\n        updateLater(); // kick off the UI update process.\r\n    }\r\n}\r\n/**\r\n * Horas do Auto Atendimento HH:mm:ii\r\n * @param $timeout\r\n * @returns {{restrict: string, template: string, controller: controller}}\r\n */\r\nfunction ngClock($timeout){\r\n    return {\r\n        restrict: 'E',\r\n        template:'<span class=\"time\">'\r\n        + '<span class=\"hours\">'\r\n        + '{{date.getHours() | pad}}'\r\n        + '</span>:<span class=\"minutes\">'\r\n        + '{{date.getMinutes() | pad}}'\r\n        + '</span>:<span class=\"seconds\">'\r\n        + '{{date.getSeconds() | pad}}'\r\n        + '</span>'\r\n        + '</span>',\r\n        controller: function($scope, $element) {\r\n            $scope.date = new Date();\r\n            var tick = function() {\r\n                $scope.date = new Date();\r\n                $timeout(tick, 1000);\r\n            };\r\n            $timeout(tick, 1000);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Mask para CPF e CNPJ\r\n * @returns {{require: string, restrict: string, link: link}}\r\n */\r\nfunction maskCpfCnpj(){\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: \"A\",\r\n        link: function(scope, element, attrs){\r\n            scope.$watch(attrs.ngModel, function (v) {\r\n                var cpfcnpj = v;\r\n                if(cpfcnpj != undefined) {\r\n                    var cMask = v.replace(/\\D/g, '').length <= 11 ? '000.000.000-00' : '00.000.000/0000-00';\r\n                    element.mask(cMask);\r\n                }\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Uppercase Directive\r\n * @returns {{require: string, link: link}}\r\n */\r\nfunction capitalize(){\r\n    return {\r\n        require: 'ngModel',\r\n        link: function(scope, element, attrs, modelCtrl) {\r\n            modelCtrl.$parsers.push(function(input) {\r\n                return input ? input.toUpperCase() : \"\";\r\n            });\r\n            element.css(\"text-transform\",\"uppercase\");\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Style to Radio and Checkbox\r\n * @param $timeout\r\n * @returns {{restrict: string, require: string, link: link}}\r\n */\r\nfunction icheck($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function($scope, element, $attrs, ngModel) {\r\n            return $timeout(function() {\r\n                var value;\r\n                value = $attrs['value'];\r\n\r\n                $scope.$watch($attrs['ngModel'], function(newValue){\r\n                    $(element).iCheck('update');\r\n                })\r\n\r\n                return $(element).iCheck({\r\n                    checkboxClass: 'icheckbox_square-green',\r\n                    radioClass: 'iradio_square-green'\r\n\r\n                }).on('ifChanged', function(event) {\r\n                    if ($(element).attr('type') === 'checkbox' && $attrs['ngModel']) {\r\n                        $scope.$apply(function() {\r\n                            return ngModel.$setViewValue(event.target.checked);\r\n                        });\r\n                    }\r\n                    if ($(element).attr('type') === 'radio' && $attrs['ngModel']) {\r\n                        return $scope.$apply(function() {\r\n                            return ngModel.$setViewValue(value);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction minimalizaSidebar($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        template: '<a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"\" ng-click=\"minimalize()\"><i class=\"fa fa-bars\"></i></a>',\r\n        controller: function ($scope, $element) {\r\n            $scope.minimalize = function () {\r\n                $(\"body\").toggleClass(\"mini-navbar\");\r\n                if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\r\n                    // Hide menu in order to smoothly turn on when maximize menu\r\n                    $('#side-menu').hide();\r\n                    // For smoothly turn on menu\r\n                    setTimeout(\r\n                        function () {\r\n                            $('#side-menu').fadeIn(400);\r\n                        }, 200);\r\n                } else if ($('body').hasClass('fixed-sidebar')){\r\n                    $('#side-menu').hide();\r\n                    setTimeout(\r\n                        function () {\r\n                            $('#side-menu').fadeIn(400);\r\n                        }, 100);\r\n                } else {\r\n                    // Remove all inline style from jquery fadeIn function to reset menu state\r\n                    $('#side-menu').removeAttr('style');\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction sideNavigation($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element) {\r\n            // Call the metsiMenu plugin and plug it to sidebar navigation\r\n            $timeout(function(){\r\n                element.metisMenu();\r\n\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction fullScroll($timeout){\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element) {\r\n            $timeout(function(){\r\n                element.slimscroll({\r\n                    height: '100%',\r\n                    railOpacity: 0.9\r\n                });\r\n\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction slimScroll($timeout){\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            boxHeight: '@'\r\n        },\r\n        link: function(scope, element) {\r\n            $timeout(function(){\r\n                element.slimscroll({\r\n                    height: scope.boxHeight,\r\n                    railOpacity: 0.9\r\n                });\r\n\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('nQueue')\r\n    .directive('pageTitle', pageTitle)\r\n    .directive('currentTime', currentTime)\r\n    .directive('ngClock', ngClock)\r\n    .directive('maskCpfCnpj', maskCpfCnpj)\r\n    .directive('capitalize', capitalize)\r\n    .directive('icheck', icheck)\r\n    .directive('minimalizaSidebar', minimalizaSidebar)\r\n    .directive('sideNavigation', sideNavigation)\r\n    .directive('fullScroll', fullScroll)\r\n    .directive('slimScroll', slimScroll);","function pad() {\r\n    return function(num) {\r\n        return (num < 10 ? '0' + num : num); // coloca o zero na frente\r\n    };\r\n}\r\n/**\r\n * Mask to CPF/CNPJ in {{ documento | CPF }}\r\n * @returns {Function}\r\n */\r\nfunction cpfcnpj(){\r\n    return function(input) {\r\n        if(input != undefined)\r\n        {\r\n            if(input.length <= 11){\r\n                var str = input+ '';\r\n                str = str.replace(/\\D/g,'');\r\n                str = str.replace(/(\\d{3})(\\d)/,\"$1.$2\");\r\n                str = str.replace(/(\\d{3})(\\d)/,\"$1.$2\");\r\n                str = str.replace(/(\\d{3})(\\d{1,2})$/,\"$1-$2\");\r\n                return str;\r\n            }else{\r\n                var str = input+ '';\r\n                str = str.replace(/\\D/g,'');\r\n                str = str.replace(/(\\d{2})(\\d)/,\"$1.$2\");\r\n                str = str.replace(/(\\d{3})(\\d)/,\"$1.$2\");\r\n                str = str.replace(/(\\d{3})(\\d)/,\"$1/$2\");\r\n                str = str.replace(/(\\d{4})(\\d{1,2})$/,\"$1-$2\");\r\n                return str;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction attend(){\r\n    return function(input){\r\n        if(input != undefined){\r\n            if(input==1){\r\n                return \"Normal\";\r\n            }else if(input==2){\r\n                return \"Preferencial\";\r\n            }else if(input==3){\r\n                return \"Mensalista\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nangular\r\n    .module('nQueue')\r\n    .filter('pad', pad)\r\n    .filter('cpfcnpj', cpfcnpj)\r\n    .filter('attend', attend);","/**\r\n * Controllers AngularJS\r\n */\r\nfunction MainCtrl($scope){\r\n    $scope.teste = 'Testando';\r\n}\r\n\r\nfunction HomeCtrl($scope, listToQueue){\r\n    $scope.list = [];\r\n    listToQueue\r\n        .get()\r\n        .success(function(data){\r\n            $scope.list = data;\r\n        });\r\n}\r\n\r\nangular\r\n    .module('nQueue')\r\n    .controller('MainCtrl', MainCtrl)\r\n    .controller('HomeCtrl', HomeCtrl)"],"sourceRoot":"/source/"}